dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(edgar, 0.2.0, dave@gurumeditation.it)
AC_PREREQ(2.52)
AC_CONFIG_SRCDIR(configure.ac)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_ISC_POSIX

AM_INIT_AUTOMAKE(1.8)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AC_C___ATTRIBUTE__

define([AC_LIBTOOL_LANG_CXX_CONFIG], [:])dnl
define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl
AC_PROG_LIBTOOL

#AM_GNU_GETTEXT([external])
#AM_GNU_GETTEXT_VERSION(0.14)

release=$(pkg-config --variable=release enlightenment)
MODULE_ARCH="$host_os-$host_cpu-$release"
AC_SUBST(MODULE_ARCH)
AC_DEFINE_UNQUOTED(MODULE_ARCH, "$MODULE_ARCH", "Module architecture")

# Find edje_cc
PKG_CHECK_MODULES(EDJE, [edje >= 0.5.0])
AC_ARG_WITH(edje-cc,
  AC_HELP_STRING([--with-edje-cc=PATH], [specify a specific path to edje_cc]),
  [
    v=$withval;
    EDJE_CC=$v
  ],[
    EDJE_CC=$(pkg-config --variable=prefix edje)/bin/edje_cc
  ]
)
AC_SUBST(EDJE_CC)
AC_MSG_CHECKING([Which edje_cc to use])
AC_MSG_RESULT(${EDJE_CC})

# Check enlightenment version >=0.18
# (for e18 we manually define E_VERSION_MAJOR)
PKG_CHECK_MODULES(E,
    [enlightenment >= 0.18 enlightenment < 0.19],
    [AC_DEFINE([E_VERSION_MAJOR], [18], [Have exactly E18])],
    [PKG_CHECK_MODULES(E, [enlightenment >= 0.19])]
)

# Explicit link to Eo
PKG_CHECK_MODULES(EO, [eo])

# Check for python3 and required modules
# PKG_CHECK_MODULES(PYTHON3, [python3 >= 3.2])
AX_PYTHON_DEVEL([>= '3.2'])
AC_SUBST([PYTHON])

AX_PYTHON3_MODULE(efl, "required")
AX_PYTHON3_MODULE(dbus, "required")



datadir=$(pkg-config --variable=modules enlightenment)/${PACKAGE}

AC_ARG_ENABLE(homedir-install,
  AS_HELP_STRING([--enable-homedir-install], [Install module in homedir]),
  [ datadir="${HOME}/.e/e/modules/${PACKAGE}" ]
)


AC_OUTPUT([
Makefile
src/Makefile
python/Makefile
module.desktop
], [
])
